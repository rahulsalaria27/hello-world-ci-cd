name: Flutter CI/CD demo

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up GEM Environment
        run: |
          echo "GEM_HOME=$HOME/.gem" >> $GITHUB_ENV
          echo "GEM_PATH=$HOME/.gem" >> $GITHUB_ENV

      - name: Install Fastlane
        run: |
          gem install fastlane -NV --user-install
          GEM_BIN=$(ruby -e 'require "rubygems"; puts File.join(Gem.user_dir, "bin")')
          echo "$GEM_BIN" >> $GITHUB_PATH
          echo "Fastlane installed in: $GEM_BIN"

      - name: Verify Fastlane Installation
        run: |
          export GEM_HOME=$HOME/.gem
          export GEM_PATH=$HOME/.gem
          fastlane --version

      - name: Cache Flutter Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: flutter-pub-linux-stable-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            flutter-pub-linux-stable-${{ runner.os }}-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.2"
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Linter
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      - name: Build Release APK
        run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Build AppBundle
        run: flutter build appbundle --release

      - name: Upload AppBundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: cd android && fastlane deploy_firebase

#      - name: Deploy to Play Store (Optional)
#        env:
#          JSON_KEY_FILE: ${{ secrets.GOOGLE_PLAY_JSON }}
#        run: cd android && fastlane deploy_playstore
#
#      - name: Deploy to TestFlight
#        env:
#          APP_STORE_API_KEY: ${{ secrets.APP_STORE_API_KEY }}
#        run: cd ios && fastlane deploy_testflight
